* Limit the number of results

  [[https://www.elastic.co/guide/en/elasticsearch/reference/current/search-request-body.html#request-body-search-from-size][search_request_body from_size]]
  Inside the body of the request you can add
  #+BEGIN_SRC python
  "from" : 0, "size" : 10,
  #+END_SRC

  like
  #+BEGIN_SRC python
  {
      "from" : 0, "size" : 10,
      "query": {
          "bool": {
              "minimum_should_match": "1",
              "should": [
                  {
                      "multi_match": {
                          "query": "banane",
                          "fuzziness": "AUTO",
                          "type": "most_fields",
                          "fields": [
                              "title^5",
                              "title.stemmed^5",
                              "titleReword^3",
                              "titleReword.stemmed^3"
                          ]
                      }
                  }
              ]
          }
      }
  }
  #+END_SRC

* permettre au FRONT de récupérer le mot clé d'approximation

  Inside the search request body we use a suggester
  [[https://www.elastic.co/guide/en/elasticsearch/reference/current/search-suggesters.html][Suggesters]]
  #+BEGIN_SRC python
    "suggest": {
        "text": "banane",
        "suggest-title": {
            "term": {
                "field": "title"
            }
        },
        "suggest-responses": {
            "term": {
                "field": "responses.body"
            }
        }
  #+END_SRC

  With that we get this inside the response body

  #+BEGIN_SRC python
      "suggest": {
        "suggest-responses": [
            {
                "text": "banane",
                "offset": 0,
                "length": 6,
                "options": [
                    {
                        "text": "banque",
                        "score": 0.6666666,
                        "freq": 26
                    },
                    {
                        "text": "bagage",
                        "score": 0.6666666,
                        "freq": 1
                    },
                    {
                        "text": "bonne",
                        "score": 0.6,
                        "freq": 1
                    }
                ]
            }
        ],
        "suggest-title": [
            {
                "text": "banane",
                "offset": 0,
                "length": 6,
                "options": [
                    {
                        "text": "banque",
                        "score": 0.6666666,
                        "freq": 7
                    }
                ]
            }
        ]
    }
  #+END_SRC

  Each options array contains an option object that includes the:
  - suggested text, 
  - its document frequency and
  - score compared to the suggest entry text. 

  The meaning of the score depends on the used suggester. The term suggester’s score is based on the edit distance.

  So you can retrieve the words, by inspecting the suggester. You might filter them by the frequency.


  
   
  

